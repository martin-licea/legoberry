on:
  push:
    branches:
      - main
jobs:
  increment_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.tag_version.outputs.version }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - run: git fetch --tags
      - name: Get Tag Version
        id: tag_version
        run: |
          MINOR_VERSION=$(cat VERSION)
          echo "MINOR_VERSION: ${MINOR_VERSION}"
          echo $(git tag -l| sort -Vr | head -n 1)
          LATEST_TAG=$(git tag -l "${MINOR_VERSION}*" | sort -Vr | head -n 1) 
          echo "LATEST_TAG: ${LATEST_TAG}"
          NEXT=$(( ${LATEST_TAG##*.*.} + 1 ))
          echo "NEXT: ${NEXT}"
          NEW_TAG="${MINOR_VERSION}.${NEXT}"
          echo "version=$NEW_TAG" >> $GITHUB_OUTPUT

  pyinstaller-build:
    needs: [increment_version]
    runs-on: windows-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "${{ github.event.release.name }}"
      - run: echo "new version is ${{ needs.increment_version.outputs.version }}"
      - name: Create Executable
        uses: sayyid5416/pyinstaller@v1
        id: create_exec
        with:
          python_ver: '3.11'
          spec: 'legoberry.spec'
          requirements: 'requirements.txt'
          exe_path: ./dist
          upload_exe_with_name: 'Legoberry-${{ needs.increment_version.outputs.version }}'
          options: --onefile, --name "Legoberry${{ github.event.release.name }}-${{ needs.increment_version.outputs.version }}", --windowed,
      - run: |
          cd dist
          dir
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ needs.increment_version.outputs.version }}
          tag_name: ${{ needs.increment_version.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: '${{ steps.create_exec.outputs.executable_path }}/Legoberry-${{ needs.increment_version.outputs.version }}.zip'
          asset_name: 'Legoberry-${{ needs.increment_version.outputs.version }}.zip'
          asset_content_type: application/zip
